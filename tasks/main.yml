---
- name: Download Caddy package
  get_url:
    url: "{{ caddy_download_url }}"
    dest: "/usr/bin/caddy"
    mode: '0755'

- name: Create group for Caddy
  group:
    name: caddy
    system: yes

- name: Create user for Caddy
  user:
    name: caddy
    group: caddy
    home: /var/lib/caddy
    shell: /usr/sbin/nologin
    system: yes

- name: Create required directories
  file:
    path: "{{ item.path }}"
    state: directory
    mode: '0755'
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - {path: '/etc/caddy', owner: 'caddy', group: 'caddy'}
    - {path: '/var/www/html', owner: 'caddy', group: 'caddy'}
    - {path: '/var/lib/caddy', owner: 'caddy', group: 'caddy'}

- name: Create Caddyfile with Cloudflare plugin
  copy:
    dest: /etc/caddy/Caddyfile
    content: |
      {
        email {{ caddy_tls_email }}
        servers {
          {% if caddy_enable_metrics == true %}
          metrics
          {% endif %}
        }
      }
      {{ caddy_domain }} {
        tls {
          dns {{ caddy_dns_provider }} {{ caddy_dns_api_token }}
        }
        {% if caddy_target_port is defined %}
        reverse_proxy 127.0.0.1:{{ caddy_target_port }}
        {% elif caddy_target_path is defined %}
        root * {{ caddy_target_path }}
        file_server
        {% endif %}
      }

- name: Create Caddy service
  copy:
    dest: /etc/systemd/system/caddy.service
    content: |
      [Unit]
      Description=Caddy
      Documentation=https://caddyserver.com/docs/
      After=network.target network-online.target
      Requires=network-online.target

      [Service]
      User=caddy
      Group=caddy
      ExecStart=/usr/bin/caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
      ExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile --adapter caddyfile
      TimeoutStopSec=5s
      LimitNOFILE=1048576
      LimitNPROC=512
      PrivateTmp=true
      ProtectSystem=full
      AmbientCapabilities=CAP_NET_BIND_SERVICE

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Start and enable Caddy at boot
  service:
    name: caddy
    state: started
    enabled: yes
